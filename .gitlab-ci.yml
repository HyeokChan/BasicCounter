stages:
  - trigger
  - build
  - dockerize
  - deployment

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  SPRING_IMAGE_TAG: $CI_REGISTRY_IMAGE/counterapp:${CI_COMMIT_REF_SLUG}_spring
  REACT_IMAGE_TAG: $CI_REGISTRY_IMAGE/basiccounterfront:${CI_COMMIT_REF_SLUG}_react

start_build:
  stage: trigger
  script:
    - echo "Triggering build job"
  when: manual

build_spring:
  stage: build
  image: maven:3.8.3-openjdk-17
  script:
    - cd counterapp
    - mvn clean package
  artifacts:
    paths:
      - counterapp/target/*.jar
  needs:
    - start_build
  only:
    - main

build_react:
  stage: build
  image: node:latest
  script:
    - cd basiccounterfront
    - npm install
    - npm run build
  artifacts:
    paths:
      - basiccounterfront/build/*
  needs:
    - start_build
  only:
    - main

dockerize_spring:
  stage: dockerize
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - cd counterapp
    - docker build -t $SPRING_IMAGE_TAG .
    - docker push $SPRING_IMAGE_TAG
  only:
    - main
  dependencies:
    - build_spring
  needs:
    - build_spring

dockerize_react:
  stage: dockerize
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - cd basiccounterfront
    - docker build -t $REACT_IMAGE_TAG .
    - docker push $REACT_IMAGE_TAG
  only:
    - main
  dependencies:
    - build_react
  needs:
    - build_react

deploy_to_ec2:
  stage: deploy
  image: ubuntu:latest
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "StrictHostKeyChecking no" >> ~/.ssh/config
  script:
    - ssh -i $SSH_PRIVATE_KEY $EC2_USER@$EC2_HOST "docker pull $SPRING_IMAGE_TAG"
    - ssh -i $SSH_PRIVATE_KEY $EC2_USER@$EC2_HOST "docker stop spring-app || true && docker rm spring-app || true"
    - ssh -i $SSH_PRIVATE_KEY $EC2_USER@$EC2_HOST "docker run -d --name spring-app -p 8081:8081 $SPRING_IMAGE_TAG"
    - ssh -i $SSH_PRIVATE_KEY $EC2_USER@$EC2_HOST "docker pull $REACT_IMAGE_TAG"
    - ssh -i $SSH_PRIVATE_KEY $EC2_USER@$EC2_HOST "docker stop react-app || true && docker rm react-app || true"
    - ssh -i $SSH_PRIVATE_KEY $EC2_USER@$EC2_HOST "docker run -d --name react-app -p 3000:80 $REACT_IMAGE_TAG"
  needs:
    - dockerize_spring
    - dockerize_react
  only:
    - main

